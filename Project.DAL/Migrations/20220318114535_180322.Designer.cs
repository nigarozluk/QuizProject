// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.DAL.DAL;

namespace Project.DAL.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20220318114535_180322")]
    partial class _180322
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Project.DAL.Entity.Exam", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("TextID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("TextID");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("Project.DAL.Entity.Option", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsTrue")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OptionText")
                        .HasColumnType("TEXT");

                    b.Property<int>("QuestionID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("QuestionID");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("Project.DAL.Entity.Question", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("TextID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("TextID");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Project.DAL.Entity.Text", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TextContent")
                        .HasColumnType("TEXT");

                    b.Property<string>("TextTitle")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Texts");
                });

            modelBuilder.Entity("Project.DAL.Entity.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserMail")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserPassword")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Project.DAL.Entity.UserExam", b =>
                {
                    b.Property<int>("ExamID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExamDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsStarted")
                        .HasColumnType("INTEGER");

                    b.HasKey("ExamID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("UserExams");
                });

            modelBuilder.Entity("Project.DAL.Entity.Exam", b =>
                {
                    b.HasOne("Project.DAL.Entity.Text", "Text")
                        .WithMany()
                        .HasForeignKey("TextID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Text");
                });

            modelBuilder.Entity("Project.DAL.Entity.Option", b =>
                {
                    b.HasOne("Project.DAL.Entity.Question", "Questions")
                        .WithMany("Options")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Project.DAL.Entity.Question", b =>
                {
                    b.HasOne("Project.DAL.Entity.Text", "Text")
                        .WithMany("Questions")
                        .HasForeignKey("TextID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Text");
                });

            modelBuilder.Entity("Project.DAL.Entity.UserExam", b =>
                {
                    b.HasOne("Project.DAL.Entity.Exam", "Exam")
                        .WithMany("UserExams")
                        .HasForeignKey("ExamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.DAL.Entity.User", "User")
                        .WithMany("UserExams")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project.DAL.Entity.Exam", b =>
                {
                    b.Navigation("UserExams");
                });

            modelBuilder.Entity("Project.DAL.Entity.Question", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("Project.DAL.Entity.Text", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Project.DAL.Entity.User", b =>
                {
                    b.Navigation("UserExams");
                });
#pragma warning restore 612, 618
        }
    }
}
